<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Three.js VR Roller Coaster</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    html, body {
      margin: 0;
      height: 100%;
      overflow: hidden;
      background: #000;
    }
    canvas {
      display: block;
    }
  </style>
</head>
<body>
  <script type="module">
    import * as THREE from 'https://unpkg.com/three@0.128.0/build/three.module.js';
    import { VRButton } from 'https://unpkg.com/three@0.128.0/examples/jsm/webxr/VRButton.js';

    let camera, scene, renderer, coaster, curve;
    let time = 0;

    init();
    animate();

    function init() {
      scene = new THREE.Scene();
      scene.background = new THREE.Color(0x000000);

      camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000
      );

      renderer = new THREE.WebGLRenderer({ antialias: true });
      renderer.setSize(window.innerWidth, window.innerHeight);
      renderer.xr.enabled = true;
      document.body.appendChild(renderer.domElement);
      document.body.appendChild(VRButton.createButton(renderer));

      // Lighting
      const light = new THREE.DirectionalLight(0xffffff, 1);
      light.position.set(1, 1, 1);
      scene.add(light);
      scene.add(new THREE.AmbientLight(0x888888));

      // Create track spline
      curve = new THREE.CatmullRomCurve3(
        [
          new THREE.Vector3(0, 0, 0),
          new THREE.Vector3(10, 5, -10),
          new THREE.Vector3(20, 0, -20),
          new THREE.Vector3(30, 10, -30),
          new THREE.Vector3(40, 0, -10),
          new THREE.Vector3(50, -5, 10),
          new THREE.Vector3(60, 0, 20),
          new THREE.Vector3(70, 10, 0),
          new THREE.Vector3(80, 0, -20),
          new THREE.Vector3(90, 0, 0)
        ],
        true // closed loop
      );

      const trackGeometry = new THREE.TubeGeometry(curve, 300, 0.3, 8, true);
      const trackMaterial = new THREE.MeshStandardMaterial({ color: 0xff0000 });
      const trackMesh = new THREE.Mesh(trackGeometry, trackMaterial);
      scene.add(trackMesh);

      // Coaster car (camera holder)
      coaster = new THREE.Object3D();
      scene.add(coaster);
      coaster.add(camera);

      // Ground
      const ground = new THREE.Mesh(
        new THREE.PlaneGeometry(1000, 1000),
        new THREE.MeshPhongMaterial({ color: 0x333333 })
      );
      ground.rotation.x = -Math.PI / 2;
      ground.position.y = -5;
      scene.add(ground);

      window.addEventListener('resize', onWindowResize);
    }

    function onWindowResize() {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize(window.innerWidth, window.innerHeight);
    }

    function animate() {
      renderer.setAnimationLoop(render);
    }

    function render() {
      time += 0.001;
      const t = time % 1;
      const position = curve.getPointAt(t);
      const tangent = curve.getTangentAt(t);

      coaster.position.copy(position);

      // Orient the coaster to face along the track
      const up = new THREE.Vector3(0, 1, 0);
      const axis = new THREE.Vector3().crossVectors(up, tangent).normalize();
      const radians = Math.acos(up.dot(tangent));
      coaster.quaternion.setFromAxisAngle(axis, radians);

      renderer.render(scene, camera);
    }
  </script>
</body>
</html>

